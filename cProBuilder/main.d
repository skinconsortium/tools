module main;

/*
	Generated by Entice Designer
	Entice Designer written by Christopher E. Miller
	www.dprogramming.com/entice.php
*/
public final char[] OWN_NSIS_DEFINITION_FILE = "cPro_Installer_Config.nsh";

import dfl.application;
import dfl.all;
import res.res;
import com.skinconsortium.d.dfl.PositionedWindow;
import com.skinconsortium.d.commons.NSISDefinitionFile;
import tango.util.PathUtil;
import dfl.internal.winapi;
import tango.stdc.stringz;
import tango.io.FilePath,
	   tango.io.FileSystem;
import buildstamp;
import BuildThread;

class Main: PositionedWindow
{
	// Do not modify or move this block of variables.
	//~Entice Designer variables begin here.
	dfl.picturebox.PictureBox headerImage;
	dfl.panel.Panel panelDivDark;
	dfl.panel.Panel panelDivBright;
	dfl.panel.Panel runPanel;
	dfl.label.Label label1;
	dfl.label.Label label2;
	dfl.textbox.TextBox buildVersion;
	dfl.label.Label label3;
	dfl.textbox.TextBox textBuildName;
	dfl.combobox.ComboBox buildChooser;
	dfl.button.Button runBuild;
	dfl.panel.Panel panel2;
	dfl.groupbox.GroupBox groupBox2;
	dfl.panel.Panel panel3;
	dfl.button.Button testInstaller;
	dfl.label.Label builderVersion;
	dfl.textbox.TextBox nsisOutput;
	//~Entice Designer variables end here.
	
	final static char[][] BUILD_TYPES = ["FINAL", "BETA", "NIGHTLY"];
	final static char[][] BUILD_TYPE_NAMES = ["", "Beta 1", "Nigtly"];
	
	final FilePath exePath;
	final static char[] CPRO_BUILDER_VERSION = "0.30";
	
	/// used to count the lines in nsisOutput - maybe add a better method for this, since linewrapping may result in glitches...
	private int lineCount = 0;	
	
	this()
	{
		initializeMain();
		
		//@  Other Main initialization code here.
		this.icon = Application.resources.getIcon(ID_ICON_APP);
		this.headerImage.image = Application.resources.getBitmap(ID_BITMAP_HEAER);
		
		panel2.dockPadding.all = 6;
		
		buildChooser.items.addRange(BUILD_TYPES);

		buildVersion.text = NSISDefinitionFile.getValue("CPRO_VERSION", "1.10");
		buildChooser.text = NSISDefinitionFile.getValue("CPRO_BUILD_TYPE", BUILD_TYPES[0]);
		textBuildName.text = NSISDefinitionFile.getValue("CPRO_BUILD_NAME", "");
		
		runBuild.click ~= &startBuild;
		testInstaller.click ~= &startInstaller;
		
		exePath = (new FilePath(FileSystem.getDirectory()));
	}
	
	private void buildThreadStatusUpdate(char[] line)
	{
		 try
		 {
			 lineCount++;
			 char[] append = nsisOutput.text;
			 append ~= line ~ "\r\n";
	    	 nsisOutput.text = append;
	    	 SendMessageA(nsisOutput.handle(), EM_LINESCROLL, 0, lineCount);
		    	 
			 if (line.length > 10)
			 {
				 if (line[0..8] == "Output: ")
				 {
					 testInstaller.enable();
					 testInstaller.tag = new dfl.all.StringObject(line[9..$-1].dup);
				 }
			 }		    	 
		 }
		 catch(Exception e) {}
	}
	
	private void buildThreadComplete()
	{
		runBuild.enable();
	}
	
	private void startInstaller(Object sender, EventArgs ea)
	{
		if (testInstaller.tag is null)
			return;
		
		char* stringz = toStringz("\""~testInstaller.tag.toString()~"\"");
		ShellExecuteA(null, null, stringz, null, null, SW_SHOWNORMAL);
	}
	
	private void startBuild(Object sender, EventArgs ea)
	{
		runBuild.disable();
		testInstaller.disable();
		testInstaller.tag = null;
		nsisOutput.clear();
		NSISDefinitionFile.setValue("CPRO_VERSION", buildVersion.text);
		NSISDefinitionFile.setValue("CPRO_BUILD_TYPE", buildChooser.text);
		NSISDefinitionFile.setValue("CPRO_BUILD_NAME", textBuildName.text);
		NSISDefinitionFile.setValue("CPRO_BUILD_FILENAME_ADDITION", Text.replace!(char)(textBuildName.text, ' ', '_'));
		auto installerPath = exePath.dup.native.toString;
		auto winampPath = exePath.dup.pop.pop.pop.native.toString;
		NSISDefinitionFile.setValue("CPRO_OUTFILE_PATH", installerPath);
		NSISDefinitionFile.setValue("CPRO_WINAMP_SKINS", winampPath~"\\Skins");
		NSISDefinitionFile.setValue("CPRO_WINAMP_SYSTEM", winampPath~"\\System");
		NSISDefinitionFile.save();
		
		
		BuildThread bt = new BuildThread(&buildThreadStatusUpdate, &buildThreadComplete);
		bt.start();
	}
	
	
	private void initializeMain()
	{
		// Do not manually modify this function.
		//~Entice Designer 0.8.6pre4 code begins here.
		//~DFL Form
		formBorderStyle = dfl.all.FormBorderStyle.FIXED_SINGLE;
		text = "ClassicPro Builder";
		clientSize = dfl.all.Size(370, 406);
		//~DFL dfl.picturebox.PictureBox=headerImage
		headerImage = new dfl.picturebox.PictureBox();
		headerImage.name = "headerImage";
		headerImage.backColor = dfl.all.Color(255, 255, 255);
		headerImage.dock = dfl.all.DockStyle.TOP;
		headerImage.bounds = dfl.all.Rect(0, 0, 370, 57);
		headerImage.parent = this;
		//~DFL dfl.panel.Panel=panelDivDark
		panelDivDark = new dfl.panel.Panel();
		panelDivDark.name = "panelDivDark";
		panelDivDark.backColor = dfl.all.SystemColors.windowFrame;
		panelDivDark.dock = dfl.all.DockStyle.TOP;
		panelDivDark.bounds = dfl.all.Rect(0, 57, 370, 1);
		panelDivDark.parent = this;
		//~DFL dfl.panel.Panel=panelDivBright
		panelDivBright = new dfl.panel.Panel();
		panelDivBright.name = "panelDivBright";
		panelDivBright.backColor = dfl.all.SystemColors.controlLightLight;
		panelDivBright.dock = dfl.all.DockStyle.TOP;
		panelDivBright.bounds = dfl.all.Rect(0, 58, 370, 1);
		panelDivBright.parent = this;
		//~DFL dfl.panel.Panel=runPanel
		runPanel = new dfl.panel.Panel();
		runPanel.name = "runPanel";
		runPanel.dock = dfl.all.DockStyle.TOP;
		runPanel.bounds = dfl.all.Rect(0, 59, 370, 55);
		runPanel.parent = this;
		//~DFL dfl.label.Label=label1
		label1 = new dfl.label.Label();
		label1.name = "label1";
		label1.text = "Build Name";
		label1.textAlign = dfl.all.ContentAlignment.MIDDLE_LEFT;
		label1.bounds = dfl.all.Rect(8, 32, 60, 23);
		label1.parent = runPanel;
		//~DFL dfl.label.Label=label2
		label2 = new dfl.label.Label();
		label2.name = "label2";
		label2.text = "Version";
		label2.textAlign = dfl.all.ContentAlignment.MIDDLE_LEFT;
		label2.bounds = dfl.all.Rect(200, 8, 44, 23);
		label2.parent = runPanel;
		//~DFL dfl.textbox.TextBox=buildVersion
		buildVersion = new dfl.textbox.TextBox();
		buildVersion.name = "buildVersion";
		buildVersion.bounds = dfl.all.Rect(248, 8, 112, 21);
		buildVersion.parent = runPanel;
		//~DFL dfl.label.Label=label3
		label3 = new dfl.label.Label();
		label3.name = "label3";
		label3.text = "Build Type";
		label3.textAlign = dfl.all.ContentAlignment.MIDDLE_LEFT;
		label3.bounds = dfl.all.Rect(8, 8, 60, 23);
		label3.parent = runPanel;
		//~DFL dfl.textbox.TextBox=textBuildName
		textBuildName = new dfl.textbox.TextBox();
		textBuildName.name = "textBuildName";
		textBuildName.bounds = dfl.all.Rect(72, 32, 112, 21);
		textBuildName.parent = runPanel;
		//~DFL dfl.combobox.ComboBox=buildChooser
		buildChooser = new dfl.combobox.ComboBox();
		buildChooser.name = "buildChooser";
		buildChooser.bounds = dfl.all.Rect(72, 8, 112, 21);
		buildChooser.parent = runPanel;
		//~DFL dfl.button.Button=runBuild
		runBuild = new dfl.button.Button();
		runBuild.name = "runBuild";
		runBuild.text = "Run Build";
		runBuild.bounds = dfl.all.Rect(198, 32, 163, 21);
		runBuild.parent = runPanel;
		//~DFL dfl.panel.Panel=panel2
		panel2 = new dfl.panel.Panel();
		panel2.name = "panel2";
		panel2.dock = dfl.all.DockStyle.FILL;
		panel2.bounds = dfl.all.Rect(0, 114, 370, 292);
		panel2.parent = this;
		//~DFL dfl.groupbox.GroupBox=groupBox2
		groupBox2 = new dfl.groupbox.GroupBox();
		groupBox2.name = "groupBox2";
		groupBox2.dock = dfl.all.DockStyle.FILL;
		groupBox2.text = "NSIS Output";
		groupBox2.bounds = dfl.all.Rect(0, 0, 370, 292);
		groupBox2.parent = panel2;
		//~DFL dfl.panel.Panel=panel3
		panel3 = new dfl.panel.Panel();
		panel3.name = "panel3";
		panel3.dock = dfl.all.DockStyle.BOTTOM;
		panel3.bounds = dfl.all.Rect(8, 259, 354, 25);
		panel3.parent = groupBox2;
		//~DFL dfl.button.Button=testInstaller
		testInstaller = new dfl.button.Button();
		testInstaller.name = "testInstaller";
		testInstaller.enabled = false;
		testInstaller.text = "Test Installer";
		testInstaller.bounds = dfl.all.Rect(244, 4, 99, 21);
		testInstaller.parent = panel3;
		//~DFL dfl.label.Label=builderVersion
		builderVersion = new dfl.label.Label();
		builderVersion.name = "builderVersion";
		builderVersion.enabled = false;
		builderVersion.text = "ClassicPro Builder - version "~CPRO_BUILDER_VERSION~" Build #"~buildstamp.buildstamp_char;
		builderVersion.bounds = dfl.all.Rect(0, 8, 200, 15);
		builderVersion.parent = panel3;
		//~DFL dfl.textbox.TextBox=nsisOutput
		nsisOutput = new dfl.textbox.TextBox();
		nsisOutput.name = "nsisOutput";
		nsisOutput.dock = dfl.all.DockStyle.FILL;
		nsisOutput.multiline = true;
		nsisOutput.readOnly = true;
		nsisOutput.scrollBars = dfl.all.ScrollBars.BOTH;
		nsisOutput.bounds = dfl.all.Rect(8, 19, 354, 240);
		nsisOutput.parent = groupBox2;
		//~Entice Designer 0.8.6pre4 code ends here.
	}
}


int main()
{
	int result = 0;
	
	try
	{
		Application.enableVisualStyles();
		
		//@  Other application initialization code here.
		
		Application.run(new Main());
	}
	catch(Object o)
	{
		msgBox(o.toString(), "Fatal Error", MsgBoxButtons.OK, MsgBoxIcon.ERROR);
		
		result = 1;
	}
	
	return result;
}

